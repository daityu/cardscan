<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <meta name="referrer" content="no-referrer-when-downgrade" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* 共通ボタンスタイル */
        .button {
            font-size: 16px;
            padding: 15px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px;
        }

        /* ファイルアップロードボタンのスタイル */
        .file-upload-btn {
            background-color: #f2f2f2;
            display: inline-block;
        }

        /* ファイル選択フィールドを隠す */
        .file-upload-btn input[type="file"] {
            display: none;
        }

        /* 提出ボタンのスタイル */
        .submit-btn {
            background-color: #4CAF50;
            color: white;
            border: none;
        }

        /* ホバー時のスタイル */
        .submit-btn:hover {
            background-color: #45a049;
        }

        /* アップロード後の画像表示スタイル */
        #uploadedImage {
            max-width: 500px;
        }

        /* ここに必要なスタイルを追加してください */
        #thumbnail {
            max-width: 100px;
            /* サムネイルの最大幅を指定 */
            max-height: 100px;
            /* サムネイルの最大高さを指定 */
        }
    </style>
</head>

<body>
    <h2>各種証明書をマスクします</h2>
    <p>ファイルを選択し、アップロードボタンを押下</p>
    <form id="uploadForm" enctype="multipart/form-data">
        <select class="button" name="type" id="type-select">
            <option value="card">保険証</option>
            <option value="dl">運転免許証</option>
        </select>
        <label class="file-upload-btn button" id="fileLabel">ファイルを選択
            <input type="file" name="file" accept="image/*" id="fileInput">
        </label>
        <!-- 選択された画像のサムネイルを表示するためのimgタグ -->
        <img id="thumbnail" src="" alt="選択された画像のサムネイル" style="display:none;">
        <input type="submit" value="アップロード" class="submit-btn button">
    </form>

    <!-- アップロードされた画像がここに表示されます -->
    <img id="uploadedImage" src="" alt="処理後画像" />

    <script>
        // GUIDを生成する関数
        function generateGUID() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
        function loadImageWithRetry(filename, retryDelay) {
            var type = document.getElementById("type-select");
            // 画像URLの生成
            var imageUrl = "https://oonakaoutput.s3.ap-northeast-1.amazonaws.com/" + type.value + "/" + filename;

            // 画像要素の取得
            var imageElement = document.getElementById('uploadedImage');

            // onerrorハンドラの設定
            imageElement.onerror = function () {
                console.log("画像の読み込みに失敗しました。リトライします。");

                // 指定された時間後に再度画像を読み込む
                setTimeout(function () {
                    imageElement.src = imageUrl;
                }, retryDelay);
            };

            // 初回の画像読み込みを開始
            imageElement.src = imageUrl;
        }
        // ファイル選択時のラベル変更
        document.getElementById('fileInput').addEventListener('change', function () {
            var file = event.target.files[0];
            if (!file.type.startsWith('image/')) { return }

            var reader = new FileReader();
            reader.onload = function (e) {
                var thumbnail = document.getElementById('thumbnail');
                thumbnail.src = e.target.result;
                thumbnail.style.display = 'block'; // サムネイルを表示する
            };
            reader.readAsDataURL(file);

        });

        // フォーム提出時の処理
        document.getElementById('uploadForm').addEventListener('submit', function (event) {
            event.preventDefault(); // デフォルトのフォーム送信を防止
            var file = this.elements.file.files[0]; // 選択されたファイルを取得

            if (!file) {
                alert("ファイルを選択してください！");
                return;
            }
            var filename = generateGUID();
            // API エンドポイントは固定値や設定から取得するべきです
            const url = 'https://182pvptd94.execute-api.ap-northeast-1.amazonaws.com/V1/' + encodeURIComponent(filename);

            fetch(url, {
                method: 'PUT',
                body: file,
                headers: {
                    'Content-Type': file.type || 'application/octet-stream'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data && data.url) {
                        setTimeout(function () {
                            loadImageWithRetry(filename, 1000);
                        }, 4000)
                    } else {
                        alert("ファイルのアップロードに失敗しました。");
                    }
                })
                .catch(error => {
                    console.error(error);
                    alert("エラーが発生しました：" + error.message);
                });
        });
    </script>
</body>

</html>